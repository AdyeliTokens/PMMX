@model PMMX.Modelo.Entidades.SeguridadFisica.RegistroUnidad

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    @Styles.Render("~/Style/Bootstrap")
    @Styles.Render("~/Style/DataRangePicker")
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RegistroUnidad</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.IdFormato, "Formato", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdFormato", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdFormato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nombre del Conductor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("NombreConductor", Model.Datos.Select(d => d.NombreConductor).FirstOrDefault(), new { @class = "form-control" })
                @Html.ValidationMessage("NombreConductor", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Empresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Empresa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Empresa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo Remolque", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("TipoRemolque", Model.Datos.Select(d => d.TipoRemolque).FirstOrDefault(), new { @class = "form-control" })
                @Html.ValidationMessage("TipoRemolque", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("#Caja", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("NoCaja", Model.Datos.Select(d => d.NoCaja).FirstOrDefault(), new { @class = "form-control" })
                @Html.ValidationMessage("NoCaja", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Placas", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Placas", Model.Datos.Select(d => d.Placas).FirstOrDefault(), new { @class = "form-control" })
                @Html.ValidationMessage("Placas", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("#Economico", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("NoEco", Model.Datos.Select(d => d.NoEco).FirstOrDefault(), new { @class = "form-control" })
                @Html.ValidationMessage("NoEco", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Asunto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Asunto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asunto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreAutoriza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreAutoriza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreAutoriza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("date", null, new { @class = "form-control" })
                @Html.ValidationMessage("date", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { Codigo = Model.Formato.Codigo})
</div>

@section Scripts{
    @Scripts.Render("~/JS/jquery")
    @Scripts.Render("~/JS/Bootstrap")
    @Scripts.Render("~/JS/Moment")
    @Scripts.Render("~/JS/DataRangePicker")

    <script>
        $(document).ready(function () {
            var today = new Date();
            $('#date').daterangepicker({
                "singleDatePicker": true,
                "timePicker": true,
                "timePicker24Hour": true,
                "locale": {
                    "format": "YYYY-MM-DD  h:mm A",
                    "separator": " - ",
                    "applyLabel": "Apply",
                    "cancelLabel": "Cancel",
                    "firstDay": 1
                },
                "startDate": today,
                "endDate": today,
                "minDate": "YYYY-MM-DD  h:mm A",
                "maxDate": "YYYY-MM-DD  h:mm A"
            });
        });
    </script>
}