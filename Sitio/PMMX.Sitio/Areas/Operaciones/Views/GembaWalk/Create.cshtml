@model PMMX.Modelo.Entidades.Operaciones.GembaWalk

@{
    ViewBag.Title = "Create";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
}
<h2>Registro CAPAIA's</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#home">Registro</a></li>
                <li><a data-toggle="tab" href="#menu1">Clasificación</a></li>
                <li><a data-toggle="tab" href="#menu2">Evidencia</a></li>
            </ul>

            <div class="tab-content">
                <div id="home" class="tab-pane fade in active">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdOrigen, "Ubicacion", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("IdOrigen", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdOrigen, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.IdOrigen, "Fecha del Hallazgo", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.FechaReporte, new { @type = "date" })
                            @Html.ValidationMessageFor(model => model.FechaReporte, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Impacto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Impacto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Impacto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ParametroIncumplido, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ParametroIncumplido, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParametroIncumplido, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AccionInmediata, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AccionInmediata, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AccionInmediata, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div id="menu1" class="tab-pane fade">
                    <div id="Clasificacion">
                    </div>
                </div>
                <div id="menu2" class="tab-pane fade">
                    <div class="form-group">
                        <div class="col-md-2">
                            @Html.Label("Adjunte imagen como evidencia:")
                        </div>
                        <div class="col-md-10">
                            <input type="file" class="form-control-file" id="inputFile" aria-describedby="fileHelp">
                            <small id="fileHelp" class="form-text text-muted">Select a file to use as test.</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


    @Scripts.Render("~/JS/jquery")

    <script>
        $(document).ready(function()
        {
            getClasificacion();

            function getClasificacion()
            {
                var url = "/Operaciones/ClasificacionHallazgo/GetClasificacion?IdSubcategoria=22";
                $.ajax({
                    dataType: "json",
                    contentType: "application/json",
                    url: url,
                    success: function (data) {
                        $.each(data.lista, function (i, k) {
                            $('<div class="checkbox"> <label><input type="checkbox" value="'+k.Id+'">'+k.Nombre+'</label></div>').appendTo('#Clasificacion');
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert('There was an error while fetching data!');
                    }
                });
            }
        });
    </script>
    