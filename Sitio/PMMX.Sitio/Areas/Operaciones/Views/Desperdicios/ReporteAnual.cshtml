@model IEnumerable<PMMX.Modelo.Vistas.CRRPorBusinessUnit>

@{
    ViewBag.Title = "Index";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
}


@section Styles {

}

<div class="row">
    <div class="col-md-12">
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Daily CRR Report</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="chart">
                            <!-- Sales Chart Canvas -->
                            <canvas id="dayChart" style="height: 180px;"></canvas>
                        </div>
                        <!-- /.chart-responsive -->
                    </div>
                    <!-- /.col -->
                    <div class="col-md-4" style="overflow: scroll; width:30%; height: 300px;">
                        @* id="scrollDiv"*@

                        @foreach (var item in Model)
                        {
                            <div class="progress-group collapsed-box">
                            <div class="box box-default">
                                <div class="box-header with-border">
                                    <h4 class="box-title text-bold text-blue">@Html.DisplayFor(modelItem => item.BusinessUnit.NombreCorto)</h4>
                                    <div class="box-tools pull-right">
                                        <span data-toggle="tooltip" title="" class="badge bg-light-blue" data-original-title="Available">OK</span>
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <!-- /.box-tools -->
                                </div>
                                <!-- /.box-header -->

                                
                            </div>
                            <!-- /.box -->
                            

                            @foreach (var workCenter in item.ValoresWorkCenters)
                            {

                                <div class="progress-group box-body">
                                    <span class="label label-success">@Html.DisplayFor(modelItem => workCenter.WorkCenter.NombreCorto)</span>

                                    @if (item.Valores.Count() > 0)
                                    {
                                        <table class="table table-hover table-striped">
                                            <thead>
                                                <tr class="info" style="width:100%">
                                                    <th style="width:75%">
                                                        FA
                                                    </th>
                                                    <th style="width:25%">
                                                        CRR
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var code_fa in workCenter.Valores)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="progress-group">
                                                                <span class="progress-text">@Html.DisplayFor(modelItem => code_fa.Code_FA)</span>
                                                                <span class="progress-number">
                                                                    <b>@Html.DisplayFor(modelItem => code_fa.PlanProduccion)</b>
                                                                    /@Html.DisplayFor(modelItem => code_fa.VolumenProduccion)
                                                                </span>
                                                                <div class="progress sm">
                                                                    @{double p = (@code_fa.PlanProduccion / (@code_fa.VolumenProduccion * 1000)) * 10;}
                                                                    <div class="progress-bar progress-bar-aqua" style="width: 60%"></div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => code_fa.CRR) %
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                </div>
                            }
                        </div>
                        }

                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </div>
            <!-- ./box-body -->
            <div class="box-footer">
                <div class="row">
                    <div class="col-sm-4 col-xs-6">
                        <div class="box box-solid">
                            <div class="box-header">
                                <h3 class="box-title text-danger">Weekly</h3>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body text-center">
                                <div class="chart">
                                    <canvas id="weekChart" style="height: 180px;"></canvas>
                                </div>
                                <!-- /.chart-responsive -->
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                        <div class="description-block border-right">
                            <div class="progress-group">
                                <span class="progress-text">Volumen</span>
                                <span class="progress-number"><b>250</b>/500</span>

                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-green" style="width: 80%"></div>
                                </div>
                            </div>
                            <span class="description-percentage text-green">CRR 0.01 %</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <!-- /.col -->
                    <div class="col-sm-4 col-xs-6">
                        <div class="box box-solid">
                            <div class="box-header">
                                <h3 class="box-title text-danger">Monthly</h3>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body text-center">
                                <div class="chart">
                                    <canvas id="monthChart" style="height: 180px;"></canvas>
                                </div>
                                <!-- /.chart-responsive -->
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                        <div class="description-block border-right">
                            <div class="progress-group">
                                <span class="progress-text">Volumen</span>
                                <span class="progress-number"><b>250</b>/500</span>

                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-yellow" style="width: 60%"></div>
                                </div>
                            </div>
                            <span class="description-percentage text-yellow">CRR 0.01 %</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <!-- /.col -->
                    <div class="col-sm-4 col-xs-6">
                        <div class="box box-solid">
                            <div class="box-header">
                                <h3 class="box-title text-danger">Yearly</h3>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body text-center">
                                <div class="chart">
                                    <canvas id="yearChart" style="height: 180px;"></canvas>
                                </div>
                                <!-- /.chart-responsive -->
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                        <div class="description-block border-right">
                            <div class="progress-group">
                                <span class="progress-text">Volumen</span>
                                <span class="progress-number"><b>250</b>/500</span>

                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-red" style="width: 20%"></div>
                                </div>
                            </div>
                            <span class="description-percentage text-red">CRR 0.01 %</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </div>
            <!-- /.box-footer -->

        </div>
        <!-- /.box -->
    </div>
    <!-- /.col -->
</div>
<!-- /.row -->

@Scripts.Render("~/JS/jquery")
@Scripts.Render("~/JS/Bootstrap")
@Scripts.Render("~/JS/ChartJS")
@Scripts.Render("~/JS/Sparkline")

<script>
    $(function ()
    {
        'use strict';

        getChartData();
        $("#scrollDiv").scroll();

        //INITIALIZE SPARKLINE CHARTS
        $(".sparkline").each(function () {
            var $this = $(this);
            $this.sparkline('html', $this.data());
        });

        drawDocSparklines();
        drawMouseSpeedDemo();
    });

    function getChartData() {
        $.ajax({
            dataType: "json",
            contentType: "application/json",
            url: "/Operaciones/Desperdicios/Parametros?Inicio=" + $("#Inicio").val(),
            success: function (data) {
                var dayChartCanvas = $('#dayChart').get(0).getContext('2d');
                var dayChart = new Chart(dayChartCanvas);

                var weekChartCanvas = $('#weekChart').get(0).getContext('2d');
                var weekChart = new Chart(weekChartCanvas);

                var monthChartCanvas = $('#monthChart').get(0).getContext('2d');
                var monthChart = new Chart(monthChartCanvas);

                var yearChartCanvas = $('#yearChart').get(0).getContext('2d');
                var yearChart = new Chart(yearChartCanvas);

                var ChartOptions = {
                    // Boolean - If we should show the scale at all
                    showScale: true,
                    // Boolean - Whether grid lines are shown across the chart
                    scaleShowGridLines: false,
                    // String - Colour of the grid lines
                    scaleGridLineColor: 'rgba(0,0,0,.05)',
                    // Number - Width of the grid lines
                    scaleGridLineWidth: 1,
                    // Boolean - Whether to show horizontal lines (except X axis)
                    scaleShowHorizontalLines: true,
                    // Boolean - Whether to show vertical lines (except Y axis)
                    scaleShowVerticalLines: true,
                    // Boolean - Whether the line is curved between points
                    bezierCurve: true,
                    // Number - Tension of the bezier curve between points
                    bezierCurveTension: 0.3,
                    // Boolean - Whether to show a dot for each point
                    pointDot: false,
                    // Number - Radius of each point dot in pixels
                    pointDotRadius: 4,
                    // Number - Pixel width of point dot stroke
                    pointDotStrokeWidth: 1,
                    // Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                    pointHitDetectionRadius: 20,
                    // Boolean - Whether to show a stroke for datasets
                    datasetStroke: true,
                    // Number - Pixel width of dataset stroke
                    datasetStrokeWidth: 2,
                    // Boolean - Whether to fill the dataset with a color
                    datasetFill: true,
                    // String - A legend template
                    legendTemplate: '<ul class=\'<%=name.toLowerCase()%>-legend\'><% for (var i=0; i<datasets.length; i++){%><li><span style=\'background-color:<%=datasets[i].lineColor%>\'></span><%=datasets[i].label%></li><%}%></ul>',
                    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                    maintainAspectRatio: true,
                    // Boolean - whether to make the chart responsive to window resizing
                    responsive: true
                };

                var dayChartData = {
                    labels: data.listadelistas.map(function (item2) {
                        return item2.Code_FA;
                    }),
                    datasets: [
                        {
                            label: 'Plan de Producción',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Daily.map(function (item3) {
                                    return item3.PlanProduccion;
                                });
                            })
                        },
                        {
                            label: 'Volumen de Producción',
                            fillColor: 'rgba(60,141,188,0.9)',
                            strokeColor: 'rgba(60,141,188,0.8)',
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Daily.map(function (item3) {
                                    return item3.VolumenProduccion;
                                });
                            })
                        },
                        {
                            label: 'CRR',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Daily.map(function (item3) {
                                    return item3.CRR;
                                });
                            })
                        },
                    ]
                };
                var weekChartData = {
                    labels: data.listadelistas.map(function (item2) {
                        return item2.Code_FA;
                    }),
                    datasets: [
                        {
                            label: 'Plan de Producción',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Weekly.map(function (item3) {
                                    return item3.PlanProduccion;
                                });
                            })
                        },
                        {
                            label: 'Volumen de Producción',
                            fillColor: 'rgba(60,141,188,0.9)',
                            strokeColor: 'rgba(60,141,188,0.8)',
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Weekly.map(function (item3) {
                                    return item3.VolumenProduccion;
                                });
                            })
                        },
                        {
                            label: 'CRR',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Weekly.map(function (item3) {
                                    return item3.CRR;
                                });
                            })
                        },
                    ]
                };
                var monthChartData = {
                    labels: data.listadelistas.map(function (item2) {
                        return item2.Code_FA;
                    }),
                    datasets: [
                        {
                            label: 'Plan de Producción',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Monthly.map(function (item3) {
                                    return item3.PlanProduccion;
                                });
                            })
                        },
                        {
                            label: 'Volumen de Producción',
                            fillColor: 'rgba(60,141,188,0.9)',
                            strokeColor: 'rgba(60,141,188,0.8)',
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Monthly.map(function (item3) {
                                    return item3.VolumenProduccion;
                                });
                            })
                        },
                        {
                            label: 'CRR',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Monthly.map(function (item3) {
                                    return item3.CRR;
                                });
                            })
                        },
                    ]
                };
                var yearChartData = {
                    labels: data.listadelistas.map(function (item2) {
                        return item2.Code_FA;
                    }),
                    datasets: [
                        {
                            label: 'Plan de Producción',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Yearly.map(function (item3) {
                                    return item3.PlanProduccion;
                                });
                            })
                        },
                        {
                            label: 'Volumen de Producción',
                            fillColor: 'rgba(60,141,188,0.9)',
                            strokeColor: 'rgba(60,141,188,0.8)',
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Yearly.map(function (item3) {
                                    return item3.VolumenProduccion;
                                });
                            })
                        },
                        {
                            label: 'CRR',
                            fillColor: 'rgb(210, 214, 222)',
                            strokeColor: 'rgb(210, 214, 222)',
                            pointColor: 'rgb(210, 214, 222)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgb(220,220,220)',
                            data: data.listadelistas.map(function (item2) {
                                return item2.Yearly.map(function (item3) {
                                    return item3.CRR;
                                });
                            })
                        },
                    ]
                };

                dayChart.Line(dayChartData, ChartOptions);
                weekChart.Line(weekChartData, ChartOptions);
                monthChart.Line(monthChartData, ChartOptions);
                yearChart.Line(yearChartData, ChartOptions);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert('There was an error while fetching data!');
            }
        });
    }

    function drawDocSparklines() {

        // Bar + line composite charts
        $('#compositebar').sparkline('html', { type: 'bar', barColor: '#aaf' });
        $('#compositebar').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7],
            { composite: true, fillColor: false, lineColor: 'red' });


        // Line charts taking their values from the tag
        $('.sparkline-1').sparkline();

        // Larger line charts for the docs
        $('.largeline').sparkline('html',
            { type: 'line', height: '2.5em', width: '4em' });

        // Customized line chart
        $('#linecustom').sparkline('html',
            {
                height: '1.5em', width: '8em', lineColor: '#f00', fillColor: '#ffa',
                minSpotColor: false, maxSpotColor: false, spotColor: '#77f', spotRadius: 3
            });

        // Bar charts using inline values
        $('.sparkbar').sparkline('html', { type: 'bar' });

        $('.barformat').sparkline([1, 3, 5, 3, 8], {
            type: 'bar',
            tooltipFormat: '{{value:levels}} - {{value}}',
            tooltipValueLookups: {
                levels: $.range_map({ ':2': 'Low', '3:6': 'Medium', '7:': 'High' })
            }
        });

        // Tri-state charts using inline values
        $('.sparktristate').sparkline('html', { type: 'tristate' });
        $('.sparktristatecols').sparkline('html',
            { type: 'tristate', colorMap: { '-2': '#fa7', '2': '#44f' } });

        // Composite line charts, the second using values supplied via javascript
        $('#compositeline').sparkline('html', { fillColor: false, changeRangeMin: 0, chartRangeMax: 10 });
        $('#compositeline').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7],
            { composite: true, fillColor: false, lineColor: 'red', changeRangeMin: 0, chartRangeMax: 10 });

        // Line charts with normal range marker
        $('#normalline').sparkline('html',
            { fillColor: false, normalRangeMin: -1, normalRangeMax: 8 });
        $('#normalExample').sparkline('html',
            { fillColor: false, normalRangeMin: 80, normalRangeMax: 95, normalRangeColor: '#4f4' });

        // Discrete charts
        $('.discrete1').sparkline('html',
            { type: 'discrete', lineColor: 'blue', xwidth: 18 });
        $('#discrete2').sparkline('html',
            { type: 'discrete', lineColor: 'blue', thresholdColor: 'red', thresholdValue: 4 });

        // Bullet charts
        $('.sparkbullet').sparkline('html', { type: 'bullet' });

        // Pie charts
        $('.sparkpie').sparkline('html', { type: 'pie', height: '1.0em' });

        // Box plots
        $('.sparkboxplot').sparkline('html', { type: 'box' });
        $('.sparkboxplotraw').sparkline([1, 3, 5, 8, 10, 15, 18],
            { type: 'box', raw: true, showOutliers: true, target: 6 });

        // Box plot with specific field order
        $('.boxfieldorder').sparkline('html', {
            type: 'box',
            tooltipFormatFieldlist: ['med', 'lq', 'uq'],
            tooltipFormatFieldlistKey: 'field'
        });

        // click event demo sparkline
        $('.clickdemo').sparkline();
        $('.clickdemo').bind('sparklineClick', function (ev) {
            var sparkline = ev.sparklines[0],
                region = sparkline.getCurrentRegionFields();
            value = region.y;
            alert("Clicked on x=" + region.x + " y=" + region.y);
        });

        // mouseover event demo sparkline
        $('.mouseoverdemo').sparkline();
        $('.mouseoverdemo').bind('sparklineRegionChange', function (ev) {
            var sparkline = ev.sparklines[0],
                region = sparkline.getCurrentRegionFields();
            value = region.y;
            $('.mouseoverregion').text("x=" + region.x + " y=" + region.y);
        }).bind('mouseleave', function () {
            $('.mouseoverregion').text('');
        });
    }

    /**
     ** Draw the little mouse speed animated graph
     ** This just attaches a handler to the mousemove event to see
     ** (roughly) how far the mouse has moved
     ** and then updates the display a couple of times a second via
     ** setTimeout()
     **/
    function drawMouseSpeedDemo() {
        var mrefreshinterval = 500; // update display every 500ms
        var lastmousex = -1;
        var lastmousey = -1;
        var lastmousetime;
        var mousetravel = 0;
        var mpoints = [];
        var mpoints_max = 30;
        $('html').mousemove(function (e) {
            var mousex = e.pageX;
            var mousey = e.pageY;
            if (lastmousex > -1) {
                mousetravel += Math.max(Math.abs(mousex - lastmousex), Math.abs(mousey - lastmousey));
            }
            lastmousex = mousex;
            lastmousey = mousey;
        });
        var mdraw = function () {
            var md = new Date();
            var timenow = md.getTime();
            if (lastmousetime && lastmousetime != timenow) {
                var pps = Math.round(mousetravel / (timenow - lastmousetime) * 1000);
                mpoints.push(pps);
                if (mpoints.length > mpoints_max)
                    mpoints.splice(0, 1);
                mousetravel = 0;
                $('#mousespeed').sparkline(mpoints, { width: mpoints.length * 2, tooltipSuffix: ' pixels per second' });
            }
            lastmousetime = timenow;
            setTimeout(mdraw, mrefreshinterval);
        };
        // We could use setInterval instead, but I prefer to do it this way
        setTimeout(mdraw, mrefreshinterval);
    }
</script>





